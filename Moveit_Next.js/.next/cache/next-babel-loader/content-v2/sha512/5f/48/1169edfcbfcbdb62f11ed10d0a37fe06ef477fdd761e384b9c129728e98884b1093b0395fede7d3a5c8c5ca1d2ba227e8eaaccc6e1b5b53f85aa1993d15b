{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\nlw4designfinal\\\\moveit-2\\\\moveit-next\\\\src\\\\components\\\\countdown.tsx\";\n\n/*Desvendando o Next.js\r\nNesse segundo dia vamos aprender o que é Next.js e quando utilizar no desenvolvimento de aplicações React. Vamos também criar nossos próprios hooks dando vida às funcionalidades de countdown e ganho de experiência e leveis através de desafios. */\n\n/*useEffect => uma funcionalidade do react hook ou efeito que dispara efeitos colaterais => quando algo mudar ou algo alcontecer quero executar uma função, quero disparar algum efeito colateral. */\nimport { useContext } from 'react';\nimport { CountdownContext } from '../contexts/countdownContext';\nimport styles from '../styles/Components/Countdown.module.css';\n/*Funcionalidade do CountDown*/\n\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    hasFinished,\n    isActive,\n    startCountdown,\n    resetCountdown\n  } = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  /*formatando Dados de maneira especifica*/\n\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n  /*formatando Dados de maneira especifica*/\n\n  /*Split=> divide*/\n\n  return (\n    /*#__PURE__*/\n\n    /*seTime => função que vai alterar o valor*/\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.countdownContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: minuteLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: minuteRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: secondLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: secondRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Terminou...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }, this) : null, hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        className: styles.countdownButton,\n        children: \"Ciclo Encerrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n          onClick: resetCountdown,\n          children: \"Abandonar Ciclo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.countdownButton,\n          onClick: startcountdown,\n          children: \"Iniciar um  Ciclo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  );\n}","map":{"version":3,"sources":["C:/nlw4designfinal/moveit-2/moveit-next/src/components/countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minutes","seconds","hasFinished","isActive","startCountdown","resetCountdown","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","countdownContainer","countdownButton","countdownButtonActive","startcountdown"],"mappings":";;;;AAAA;AACA;;AAIA;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAGA;;AACA,OAAO,SAASC,SAAT,GAAqB;AAC3B,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA;AANI,MAOFT,UAAU,CAACC,gBAAD,CAPd;AASC,QAAM,CAACS,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACR,OAAD,CAAN,CAAgBS,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AAA6E;;AAC7E,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AAA6E;;AAG/E;;AACE;AAAA;;AAAW;AACP;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACe,kBAAvB;AAAA,gCACA;AAAA,kCACA;AAAA,sBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAMA;AAAA,kCACA;AAAA,sBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAaIV,WAAW,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,GAET,IAfN,EAiBIA,WAAW,gBACX;AACA,QAAA,QAAQ,MADR;AAEA,QAAA,SAAS,EAAEJ,MAAM,CAACgB,eAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADW,gBAQV;AAAA,kBACCX,QAAQ,gBACV;AACA,UAAA,IAAI,EAAC,QADL;AAEA,UAAA,SAAS,EAAG,GAAEL,MAAM,CAACgB,eAAgB,IAAGhB,MAAM,CAACiB,qBAAsB,EAFrE;AAGH,UAAA,OAAO,EAAEV,cAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADU,gBASV;AACD,UAAA,IAAI,EAAC,QADJ;AAED,UAAA,SAAS,EAAEP,MAAM,CAACgB,eAFjB;AAGJ,UAAA,OAAO,EAAEE,cAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVC,uBAzBL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAiDE","sourcesContent":["/*Desvendando o Next.js\r\nNesse segundo dia vamos aprender o que é Next.js e quando utilizar no desenvolvimento de aplicações React. Vamos também criar nossos próprios hooks dando vida às funcionalidades de countdown e ganho de experiência e leveis através de desafios. */\r\n\r\n\r\n\r\n/*useEffect => uma funcionalidade do react hook ou efeito que dispara efeitos colaterais => quando algo mudar ou algo alcontecer quero executar uma função, quero disparar algum efeito colateral. */ \r\nimport { useContext } from 'react';\r\nimport { CountdownContext } from '../contexts/countdownContext';\r\nimport styles from '../styles/Components/Countdown.module.css';\r\n\r\n\r\n/*Funcionalidade do CountDown*/\r\nexport function Countdown() {\r\n const {\r\n   minutes,\r\n   seconds,\r\n   hasFinished,\r\n   isActive,\r\n   startCountdown,\r\n   resetCountdown\r\n  }= useContext(CountdownContext)\r\n\r\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');/*formatando Dados de maneira especifica*/\r\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');/*formatando Dados de maneira especifica*/\r\n\r\n\r\n/*Split=> divide*/\r\n  return (   /*seTime => função que vai alterar o valor*/\r\n      <div>\r\n        <div className={styles.countdownContainer}>\r\n        <div>\r\n        <span>{minuteLeft}</span>\r\n        <span>{minuteRight}</span>\r\n        </div>\r\n        <span>:</span>\r\n        <div>\r\n        <span>{secondLeft}</span>\r\n        <span>{secondRight}</span>\r\n        </div>\r\n        </div> \r\n\r\n         {hasFinished ? (\r\n           <p>Terminou...</p>\r\n         ): null}\r\n\r\n         {hasFinished ? (\r\n          <button \r\n          disabled\r\n          className={styles.countdownButton}\r\n          >  \r\n        Ciclo Encerrado \r\n           </button> \r\n         ) : (\r\n           <>\r\n          { isActive ? (\r\n          <button \r\n          type=\"button\" \r\n          className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\r\n       onClick={resetCountdown}\r\n       >  \r\n       Abandonar Ciclo\r\n        </button> \r\n        ) : (\r\n          <button \r\n         type=\"button\" \r\n         className={styles.countdownButton}\r\n      onClick={startcountdown}\r\n      >  \r\n      Iniciar um  Ciclo\r\n       </button> \r\n        ) } \r\n      </>\r\n\r\n      )}\r\n    </div>\r\n\r\n  )}\r\n        \r\n      "]},"metadata":{},"sourceType":"module"}