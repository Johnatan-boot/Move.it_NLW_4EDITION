{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\nlw4\\\\moveit-2\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  _s();\n\n  /*children tipado agora é um react*/\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"46A2+t4miPrwdQ+GWuZQeFVSJ0o=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/nlw4/moveit-2/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","levelUp"],"mappings":";;;;;AACA,SAAQA,aAAR,EAAuBC,QAAvB,QAAiD,OAAjD;AACA,OAAO,MAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAKP,OAAO,SAASG,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAkE;AAAA;;AAAE;AACvE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,CAAD,CAAlC;;AAEF,WAASM,OAAT,GAAmB;AACjBD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AACC,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAD;AAAQE,MAAAA;AAAR,KAAnC;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAZeD,kB;;KAAAA,kB","sourcesContent":["import { formatWithOptions } from \"util\";\r\nimport {createContext, useState, ReactNode} from 'react';\r\nexport const ChallengesContext = createContext({});\r\ninterface ChallengesProviderProps {\r\nchildren: ReactNode;/*ReactNode=> vai aceitar qualquer elemento Filho dentro do Children, pode\r\nser um componente um texto uma tag html, algo assim*/ /*Componente React, propriedade*/\r\n}\r\nexport function ChallengesProvider({ children }:ChallengesProviderProps) { /*children tipado agora é um react*/\r\n    const [level, setLevel] = useState(1);\r\n\r\n  function levelUp() {\r\n    setLevel(level + 1);\r\n  }\r\n    return(\r\n        <ChallengesContext.Provider value={{level, levelUp}}>\r\n          {children}\r\n        </ChallengesContext.Provider>\r\n\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}