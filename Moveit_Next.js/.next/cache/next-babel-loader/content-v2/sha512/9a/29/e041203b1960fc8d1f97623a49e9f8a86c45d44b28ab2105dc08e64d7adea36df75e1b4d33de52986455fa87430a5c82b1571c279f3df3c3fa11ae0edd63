{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\nlw4\\\\moveit-2\\\\moveit-next\\\\src\\\\components\\\\countdown.tsx\",\n    _s = $RefreshSig$();\n\n/*Desvendando o Next.js\r\nNesse segundo dia vamos aprender o que é Next.js e quando utilizar no desenvolvimento de aplicações React. Vamos também criar nossos próprios hooks dando vida às funcionalidades de countdown e ganho de experiência e leveis através de desafios. */\nlet countdownTimeout;\n/*Variavel tipagem global*/\n\nimport { useState, useEffect, useContext } from 'react';\n/*useEffect => uma funcionalidade do react hook ou efeito que dispara efeitos colaterais => quando algo mudar ou algo alcontecer quero executar uma função, quero disparar algum efeito colateral. */\n\nimport { ChallengesContext } from '../contexts/ChallengesContext';\nimport styles from '../styles/Components/Countdown.module.css';\n/*Funcionalidade do CountDown*/\n\nexport function Countdown() {\n  _s();\n\n  const {} = useContext(ChallengesContext);\n  const {\n    0: time,\n    1: seTime\n  } = useState(0.1 * 60);\n  const {\n    0: isActive,\n    1: setisActive\n  } = useState(false);\n  /*somnte estará ativo ao clicar no botão*/\n\n  const {\n    0: hasFinished,\n    1: setHasfinished\n  } = useState(false);\n  /*Estado que vai armazena se o Countdown está ativo ou não*/\n\n  /*inicializador do tempo do Countdown*/\n\n  const minutes = Math.floor(time / 60);\n  /*retorna valor baixo*/\n\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startcountdown() {\n    /*Funcionalidade que reduz segundos e minutos*/\n    setisActive(true);\n  }\n\n  function resetCountdown() {\n    /*Funcionalidade que para o Countdown*/\n    clearTimeout(countdownTimeout);\n    /*Cancelando a Execução do Timeout*/\n\n    setisActive(false);\n    /*Apartir deste momento reseta o countdown ou zera*/\n\n    seTime(0.1 * 60);\n  }\n\n  useEffect(() => {\n    /*Dispara*/\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        /*  setTimeout=>Demora um segundo para Executar adciona um delay de 1 seg.*/\n        seTime(time - 1);\n        /*Reduz o tempo em segundo, e executa em apenas uma vez*/\n      }, 1000);\n      /*setTimeout => Algo aconteca depois de um tempo depois de 1000 eq. 1 seg.*/\n    } else if (isActive && time === 0) {\n      setHasfinished(true);\n      setisActive(false);\n      /*Quando  o Countdown Finaliar  chegar a 0 ele acabou, não está mais ativo*/\n    }\n  }, [isActive, time\n  /*este parametro faz acontecer a magica*/\n  ]);\n  /*chamando a funcionalidade useEffect   2 parametros =>  1 como?{}, 2 quando? [],\r\n  [active] array de dependências*/\n\n  /*Split=> divide*/\n\n  return (\n    /*#__PURE__*/\n\n    /*seTime => função que vai alterar o valor*/\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.countdownContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: minuteLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: minuteRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: secondLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: secondRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Terminou...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }, this) : null, hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        className: styles.countdownButton,\n        children: \"Ciclo Encerrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n          onClick: resetCountdown,\n          children: \"Abandonar Ciclo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.countdownButton,\n          onClick: startcountdown,\n          children: \"Iniciar um  Ciclo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_s(Countdown, \"SBTIM6kndwsfZLYRgFzXCkpMzjs=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/nlw4/moveit-2/moveit-next/src/components/countdown.tsx"],"names":["countdownTimeout","useState","useEffect","useContext","ChallengesContext","styles","Countdown","time","seTime","isActive","setisActive","hasFinished","setHasfinished","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startcountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["/*Desvendando o Next.js\r\nNesse segundo dia vamos aprender o que é Next.js e quando utilizar no desenvolvimento de aplicações React. Vamos também criar nossos próprios hooks dando vida às funcionalidades de countdown e ganho de experiência e leveis através de desafios. */\r\n\r\nlet countdownTimeout: NodeJS.Timeout;    /*Variavel tipagem global*/\r\n\r\n\r\nimport { useState, useEffect, useContext } from 'react'; /*useEffect => uma funcionalidade do react hook ou efeito que dispara efeitos colaterais => quando algo mudar ou algo alcontecer quero executar uma função, quero disparar algum efeito colateral. */ \r\nimport { ChallengesContext } from '../contexts/ChallengesContext';\r\nimport styles from '../styles/Components/Countdown.module.css';\r\n/*Funcionalidade do CountDown*/\r\nexport function Countdown() {\r\n  const { } = useContext(ChallengesContext);\r\n  const [time, seTime] = useState(0.1 * 60);\r\n  const [isActive, setisActive] =useState(false);    /*somnte estará ativo ao clicar no botão*/\r\n   const [hasFinished, setHasfinished] = useState(false);\r\n  /*Estado que vai armazena se o Countdown está ativo ou não*/\r\n\r\n   /*inicializador do tempo do Countdown*/\r\n   const minutes =  Math.floor(time /60);  /*retorna valor baixo*/\r\n   const seconds = time % 60;\r\n   \r\n   const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n   const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n\r\n\r\n   function startcountdown() { /*Funcionalidade que reduz segundos e minutos*/\r\n    setisActive(true);\r\n\r\n   }\r\n\r\nfunction resetCountdown() {  /*Funcionalidade que para o Countdown*/\r\n  clearTimeout(countdownTimeout); /*Cancelando a Execução do Timeout*/\r\n  setisActive(false);     /*Apartir deste momento reseta o countdown ou zera*/\r\nseTime(0.1 * 60)\r\n\r\n\r\n}\r\n\r\n   useEffect(() => {  /*Dispara*/\r\n     if(isActive && time > 0) {\r\n      countdownTimeout = setTimeout(() => {   /*  setTimeout=>Demora um segundo para Executar adciona um delay de 1 seg.*/\r\n         seTime(time -1) /*Reduz o tempo em segundo, e executa em apenas uma vez*/\r\n}, 1000) /*setTimeout => Algo aconteca depois de um tempo depois de 1000 eq. 1 seg.*/ \r\n     }else if (isActive && time === 0) {\r\n      setHasfinished(true);\r\n      setisActive(false);  /*Quando  o Countdown Finaliar  chegar a 0 ele acabou, não está mais ativo*/\r\n     }\r\n   },[isActive, time/*este parametro faz acontecer a magica*/])    /*chamando a funcionalidade useEffect   2 parametros =>  1 como?{}, 2 quando? [],\r\n    [active] array de dependências*/\r\n\r\n\r\n\r\n   /*Split=> divide*/\r\n  return (   /*seTime => função que vai alterar o valor*/\r\n      <div>\r\n        <div className={styles.countdownContainer}>\r\n        <div>\r\n        <span>{minuteLeft}</span>\r\n        <span>{minuteRight}</span>\r\n        </div>\r\n        <span>:</span>\r\n        <div>\r\n        <span>{secondLeft}</span>\r\n        <span>{secondRight}</span>\r\n        </div>\r\n        </div> \r\n\r\n         {hasFinished ? (\r\n           <p>Terminou...</p>\r\n         ): null}\r\n\r\n         {hasFinished ? (\r\n          <button \r\n          disabled\r\n          className={styles.countdownButton}\r\n          >  \r\n        Ciclo Encerrado \r\n           </button> \r\n         ) : (\r\n           <>\r\n          { isActive ? (\r\n          <button \r\n          type=\"button\" \r\n          className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\r\n       onClick={resetCountdown}\r\n       >  \r\n       Abandonar Ciclo\r\n        </button> \r\n        ) : (\r\n          <button \r\n         type=\"button\" \r\n         className={styles.countdownButton}\r\n      onClick={startcountdown}\r\n      >  \r\n      Iniciar um  Ciclo\r\n       </button> \r\n        ) } \r\n      </>\r\n\r\n      )}\r\n    </div>\r\n\r\n  )}\r\n        \r\n      "]},"metadata":{},"sourceType":"module"}